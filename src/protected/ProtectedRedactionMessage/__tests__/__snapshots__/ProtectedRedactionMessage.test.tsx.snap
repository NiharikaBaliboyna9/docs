// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Protected Redaction Messages should render the protected redaction message for Gen 1 1`] = `
<div
  class="amplify-flex amplify-message amplify-message--filled amplify-message--warning"
>
  <div
    class="amplify-flex amplify-message__content"
  >
    <div
      class="amplify-flex"
    >
      <div
        class="amplify-message__icon"
      >
        <svg
          aria-hidden="false"
          aria-label="warning icon"
          class="amplify-icon"
          viewBox="0 0 24 24"
        >
          <path
            d="M10.5 13.5V15H9V18H15V15H13.5V10.5H9V13.5H10.5Z"
            fill="currentColor"
          />
          <path
            d="M13.5 9V6H10.5V9H13.5Z"
            fill="currentColor"
          />
          <path
            clip-rule="evenodd"
            d="M0 12C0 18.6274 5.37258 24 12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12ZM21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z"
            fill="currentColor"
            fill-rule="evenodd"
          />
        </svg>
      </div>
      <div>
        <p>
          With versions of Amplify CLI 
          <code>
            @aws-amplify/cli@12.12.2
          </code>
           and API Category
          <code>
            @aws-amplify/amplify-category-api@5.11.5
          </code>
          , an improvement was made to how relational field data is handled in subscriptions when different authorization rules apply to related models in a schema. The improvement redacts the values for the relational fields, displaying them as null or empty, to prevent unauthorized access to relational data. This redaction occurs whenever it cannot be determined that the child model will be protected by the same permissions as the parent model.
        </p>
        <p>
          Because subscriptions are tied to mutations and the selection set provided in the result of a mutation is then passed through to the subscription, relational fields in the result of mutations must be redacted.
        </p>
        <p>
          If an authorized end-user needs access to the redacted relational field they should perform a query to read the relational data.
        </p>
        <p>
          Additionally, subscriptions will inherit related authorization when relational fields are set as required. To better protect relational data, consider modifying the schema to use optional relational fields.
        </p>
        <p>
          Based on the security posture of your application, you can choose to revert to the subscription behavior before this improvement was made.
        </p>
        <p>
          To do so, use the 
          <code>
            subscriptionsInheritPrimaryAuth
          </code>
           feature flag under 
          <code>
            graphqltransformer
          </code>
           in the
           
          <code>
            amplify/backend/cli.json
          </code>
           file.
        </p>
        <ul>
          <li>
            If enabled, subscriptions will inherit the primary model authorization rules for the relational fields.
          </li>
          <li>
            If disabled, relational fields will be redacted in mutation response when there is a difference between auth rules between primary and related models.
          </li>
        </ul>
      </div>
    </div>
  </div>
</div>
`;

exports[`Protected Redaction Messages should render the protected redaction message for Gen 2 1`] = `
<div
  class="amplify-flex amplify-message amplify-message--filled amplify-message--warning"
>
  <div
    class="amplify-flex amplify-message__content"
  >
    <div
      class="amplify-flex"
    >
      <div
        class="amplify-message__icon"
      >
        <svg
          aria-hidden="false"
          aria-label="warning icon"
          class="amplify-icon"
          viewBox="0 0 24 24"
        >
          <path
            d="M10.5 13.5V15H9V18H15V15H13.5V10.5H9V13.5H10.5Z"
            fill="currentColor"
          />
          <path
            d="M13.5 9V6H10.5V9H13.5Z"
            fill="currentColor"
          />
          <path
            clip-rule="evenodd"
            d="M0 12C0 18.6274 5.37258 24 12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12ZM21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z"
            fill="currentColor"
            fill-rule="evenodd"
          />
        </svg>
      </div>
      <div>
        <p>
          With Amplify Data Construct 
          <code>
            @aws-amplify/data-construct@1.8.4
          </code>
          , an improvement was made to how relational field data is handled in subscriptions when different authorization rules apply to related models in a schema. The improvement redacts the values for the relational fields, displaying them as null or empty, to prevent unauthorized access to relational data.
        </p>
        <p>
          This redaction occurs whenever it cannot be determined that the child model will be protected by the same permissions as the parent model.
        </p>
        <p>
          Because subscriptions are tied to mutations and the selection set provided in the result of a mutation is then passed through to the subscription, relational fields in the result of mutations must be redacted.
        </p>
        <p>
          If an authorized end-user needs access to the redacted relational fields, they should perform a query to read the relational data.
        </p>
        <p>
          Additionally, subscriptions will inherit related authorization when relational fields are set as required. To better protect relational data, consider modifying the schema to use optional relational fields.
        </p>
      </div>
    </div>
  </div>
</div>
`;
